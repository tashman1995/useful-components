@import "../../styles/variables.scss";

.input {
  &__input {
    background-color: transparent;
    border: 1px solid $color-grey-light;
    border-radius: $border-radius / 2;
    color: $color-grey-darker;
    display: block;
    font-family: $font;
    font-size: $font-small;
    letter-spacing: inherit;
    margin-bottom: 0.8rem;
    padding: 1.4rem 1.8rem;
    transition: background-color 0.1s ease-in-out, border 0.2s ease-in-out;
    width: 100%;
    resize: none;

    &:focus,
    &:focus-visible,
    &:focus-within {
      border: 1px solid $color-primary;
      outline: none;
    }

    &::placeholder {
      color: $color-grey-light;
      font-family: $font;
      font-weight: 300;
    }

    &:disabled {
      background-color: $color-grey-lighter;
    }

    &[type="password"] {
      font-family: Verdana;
      letter-spacing: 0.125em;

      &::placeholder {
        letter-spacing: normal;
      }
    }

    // If invalid and not been focused at somepoint
    &:invalid[focused="true"] {
      border: 1px solid $color-red;

      &:focus {
        border: 1px solid $color-red;
        outline: none;
      }

      & ~ .input__error {
        display: block;
      }
    }

    &__loading {
      bottom: 0;
      margin-right: 1rem;
      padding: 0.4rem;
      position: absolute;
      right: 0;
      top: 0;
      width: 3rem;
    }

    &[type="checkbox"] {
      $size: 2.4rem;
      border: none;
      cursor: pointer;
      width: $size;
      height: $size;
      font: inherit;
      vertical-align: middle;
      -webkit-appearance: none;
      -moz-appearance: none;
      -ms-appearance: none;
      -o-appearance: none;
      appearance: none;
      background: $color-primary-lighter;
      border-radius: $border-radius/4;
      box-sizing: border-box;
      box-shadow: inset 0 0 0 0 $color-primary-light;
      padding: 0;
      position: relative;
      outline: 0;
      transform: scale(1.2);

      transition: transform 0.3s cubic-bezier(0.2, 0.3, 0, 1),
        box-shadow 0.3s cubic-bezier(0.2, 0.3, 0, 1),
        outline 0.3s cubic-bezier(0.2, 0.3, 0, 1), border-color 0s linear 0.17s;

      &:focus,
      &:active {
        box-shadow: inset 0 0 0 2px $color-primary-light;
      }

      &:checked {
        border-color: $color-primary-light;
        box-shadow: inset 0 0 0 1.2rem $color-primary-light;
        transition: transform 0.3s cubic-bezier(0.2, 0.3, 0, 1),
          box-shadow 0.3s cubic-bezier(0.2, 0.3, 0, 1), border-color 0s;

        &:focus {
          outline: 4px solid $color-primary-lighter;
        }
      }

      &:before,
      &:after {
        content: "";
        background: $color-white;
        height: $size;
        width: $size;
        position: absolute;
        transform: translate(0.3rem, 1.05rem) rotate(44.91deg)
          scale(0.3411, 0.1);
        transform-origin: 0 0;
        transition: transform 0.3s cubic-bezier(0.2, 0.3, 0, 1),
          opacity 0.3s cubic-bezier(0.2, 0.3, 0, 1);
        top: 0rem;
        left: 0.3rem;
      }
      &:after {
        transform: translate(1.65rem, 0.85rem) rotate(135.22deg)
          scale(0.5612, 0.1);
      }

      &:not(:checked):before {
        transform: translate(0.505rem, 0.455rem) rotate(44.91deg)
          scale(0.1, 0.1);
        opacity: 0;
      }
      &:not(:checked):after {
        transform: translate(0.575rem, 0.525rem) rotate(135.22deg)
          scale(0.1, 0.1);
        opacity: 0;
      }

      &:disabled {
        pointer-events: none;
        background-color: $color-grey-lighter;
      }
    }

    &[type="range"] {
      --dir: right;
      --fill: gold;
      --fillbg: rgba(100, 100, 100, 0.15);
      --star: url('data:image/svg+xml,<svg xmlns="http://www.w3.org/2000/svg" viewBox="0 0 24 24"><path d="M12 17.25l-6.188 3.75 1.641-7.031-5.438-4.734 7.172-0.609 2.813-6.609 2.813 6.609 7.172 0.609-5.438 4.734 1.641 7.031z"/></svg>');
      --stars: 5;
      --starsize: 3rem;
      --symbol: var(--star);
      --value: 1;
      --w: calc(var(--stars) * var(--starsize));
      --x: calc(100% * (var(--value) / var(--stars)));
      block-size: var(--starsize);
      inline-size: var(--w);
      position: relative;
      touch-action: manipulation;
      padding: 0;
      border: none;
      -webkit-appearance: none;

      &::-moz-range-track {
        background: var(--fillbg);
        block-size: 100%;
        mask: repeat left center/var(--starsize) var(--symbol);
      }

      &::-webkit-slider-runnable-track {
        background: var(--fillbg);
        block-size: 100%;
        mask: repeat left center/var(--starsize) var(--symbol);
        -webkit-mask: repeat left center/var(--starsize) var(--symbol);
      }

      &::-moz-range-thumb {
        height: var(--starsize);
        opacity: 0;
        width: var(--starsize);
      }

      &::-webkit-slider-thumb {
        height: var(--starsize);
        -webkit-appearance: none;
        background-color: var(--fill);
        box-shadow: calc(0rem - var(--w)) 0 0 var(--w) var(--fill);
        opacity: 1;
        width: 1px;
      }

      &::-moz-range-progress {
        background: var(--fill);
        block-size: 100%;
        mask: repeat left center/var(--starsize) var(--star);
      }
    }
  }

  &__label {
    display: block;
    margin-bottom: 0.8rem;
  }

  &__error {
    color: $color-red;
    display: none;
  }
}

@keyframes checkbox {
  0% {
    transform: scale(0);
  }
  50% {
    transform: scale(1.2);
  }
}
